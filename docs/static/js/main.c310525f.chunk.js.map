{"version":3,"sources":["components/Timer.tsx","logo.svg","components/Navbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TimerState","TimerType","NavbarExp","Navbar","bg","variant","role","Brand","href","alt","src","logo","width","height","className","Timer","props","timerState","timerType","intervalId","useRef","useState","seconds","setSeconds","reset","Focus","ShortBreak","LongBreak","resetOnTimerTypeChange","useCallback","formatTime","m","Math","floor","s","useEffect","Started","current","window","setInterval","Paused","clearInterval","Reset","formatTimeOnSecondsChange","document","title","Row","App","setTimerState","setTimerType","keyboardShortcuts","event","code","currTimerState","addEventListener","removeEventListener","Container","ButtonGroup","Button","onClick","Col","xs","lg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8JAGYA,EAMAC,E,uDCTG,G,MAAA,IAA0B,kC,QCW1BC,EARG,WAChB,OACE,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,KAAK,aAAtC,SACE,eAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,IAAnB,UAAuB,qBAAKC,IAAI,GAAGC,IAAKC,EAAMC,MAAM,KAAKC,OAAO,KAAKC,UAAU,6BAA8B,IAA7G,mB,iBFHMd,O,qBAAAA,I,mBAAAA,I,kBAAAA,M,cAMAC,O,iBAAAA,I,2BAAAA,I,0BAAAA,M,KAWZ,IA2Dec,EA3DD,SAACC,GAAuB,IAC5BC,EAA0BD,EAA1BC,WAAYC,EAAcF,EAAdE,UACdC,EAAaC,mBAFgB,EAGLC,mBAAS,GAHJ,mBAG5BC,EAH4B,KAGnBC,EAHmB,KAKnC,SAASC,IACP,OAAQN,GACN,KAAKjB,EAAUwB,MACbF,EAAW,MACX,MACF,KAAKtB,EAAUyB,WACbH,EAAW,KACX,MACF,KAAKtB,EAAU0B,UACbJ,EAAW,MAKjB,IAAMK,EAAyBC,sBAAYL,EAAO,CAACN,IAsBnD,SAASY,IACP,IAAMC,EAAIC,KAAKC,MAAMX,EAAU,KAAO,IAChCY,EAAIF,KAAKC,MAAMX,EAAU,KAAO,IACtC,OAAQS,EAAI,GAAK,IAAM,IAAMA,EAAI,KAAOG,EAAI,GAAK,IAAM,IAAMA,EAxB/DC,oBAAUP,EAAwB,CAACA,IAEnCO,qBAAU,WACR,OAAQlB,GACN,KAAKjB,EAAWoC,QACdjB,EAAWkB,QAAUC,OAAOC,aAAY,WACtChB,GAAW,SAAAW,GAAC,OAAIA,GAAK,EAAI,IAAMA,OAC9B,KACH,MACF,KAAKlC,EAAWwC,OACdC,cAActB,EAAWkB,SACzB,MACF,KAAKrC,EAAW0C,MACdD,cAActB,EAAWkB,SAEzBb,OAIH,CAACP,IAQJ,IAAM0B,EAA4Bd,sBAAYC,EAAY,CAACR,IAK3D,OAJAa,qBAAU,WACRS,SAASC,MAAQF,IAA8B,kBAC9C,CAACA,IAGF,cAACG,EAAA,EAAD,CAAKhC,UAAU,8BAAf,SACE,qBAAKA,UAAU,uBAAf,SAAwCgB,S,+BG1B/BiB,EAtCH,WAAO,IAAD,EACoB1B,mBAASrB,EAAWwC,QADxC,mBACTvB,EADS,KACG+B,EADH,OAEkB3B,mBAASpB,EAAUwB,OAFrC,mBAETP,EAFS,KAEE+B,EAFF,KAgBhB,OAZAd,qBAAU,WACR,IAAMe,EAAoB,SAACC,GACN,UAAfA,EAAMC,MACRJ,GAAc,SAAAK,GAAc,OAAIrD,EAAWwC,SAAWa,EAAiBrD,EAAWoC,QAAUpC,EAAWwC,WAI3G,OADAI,SAASU,iBAAiB,QAASJ,GAC5B,WACLN,SAASW,oBAAoB,QAASL,MAEvC,IAGD,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC0C,EAAA,EAAD,WACE,cAACV,EAAA,EAAD,CAAKhC,UAAU,8BAAf,SACI,eAAC2C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQrD,QAAQ,oBAAoBS,UAAYI,IAAcjB,EAAUwB,MAAQ,SAAW,GAAKkC,QAAU,kBAAMV,EAAahD,EAAUwB,QAAvI,mBACA,cAACiC,EAAA,EAAD,CAAQrD,QAAQ,oBAAoBS,UAAYI,IAAcjB,EAAUyB,WAAa,SAAW,GAAKiC,QAAU,kBAAMV,EAAahD,EAAUyB,aAA5I,yBACA,cAACgC,EAAA,EAAD,CAAQrD,QAAQ,oBAAoBS,UAAYI,IAAcjB,EAAU0B,UAAY,SAAW,GAAKgC,QAAU,kBAAMV,EAAahD,EAAU0B,YAA3I,6BAGN,cAAC,EAAD,CAAOV,WAAaA,EAAaC,UAAYA,IAC7C,eAAC4B,EAAA,EAAD,CAAKhC,UAAU,8BAAf,UACE,cAAC8C,EAAA,EAAD,CAAK9C,UAAU,cAAc+C,IAAE,EAACC,GAAG,IAAnC,SAAuC,cAACJ,EAAA,EAAD,CAAQ5C,UAAU,SAAST,QAAQ,UAAUsD,QAAU,kBAAMX,EAAchD,EAAWoC,UAAtF,qBACvC,cAACwB,EAAA,EAAD,CAAK9C,UAAU,cAAc+C,IAAE,EAACC,GAAG,IAAnC,SAAuC,cAACJ,EAAA,EAAD,CAAQ5C,UAAU,SAAST,QAAQ,UAAUsD,QAAU,kBAAMX,EAAchD,EAAWwC,SAAtF,qBACvC,cAACoB,EAAA,EAAD,CAAK9C,UAAU,cAAc+C,IAAE,EAACC,GAAG,IAAnC,SAAuC,cAACJ,EAAA,EAAD,CAAQ5C,UAAU,SAAST,QAAQ,SAASsD,QAAU,kBAAMX,EAAchD,EAAW0C,QAArF,+BC3BlCqB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAAS+B,eAAe,SAM1BZ,M","file":"static/js/main.c310525f.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Row from 'react-bootstrap/Row';\n\nexport enum TimerState {\n  Started,\n  Paused,\n  Reset\n}\n\nexport enum TimerType {\n  Focus,\n  ShortBreak,\n  LongBreak\n}\n\ninterface TimerProps {\n  timerState: TimerState;\n  timerType: TimerType;\n}\n\nconst Timer = (props: TimerProps) => {\n  const { timerState, timerType } = props;\n  const intervalId = useRef<number>();\n  const [seconds, setSeconds] = useState(0);\n\n  function reset () {\n    switch (timerType) {\n      case TimerType.Focus:\n        setSeconds(1500);\n        break;\n      case TimerType.ShortBreak:\n        setSeconds(300);\n        break;\n      case TimerType.LongBreak:\n        setSeconds(900);\n        break;\n    }\n  }\n\n  const resetOnTimerTypeChange = useCallback(reset, [timerType]);\n  useEffect(resetOnTimerTypeChange, [resetOnTimerTypeChange]);\n\n  useEffect(() => {\n    switch (timerState) {\n      case TimerState.Started:\n        intervalId.current = window.setInterval(() => {\n          setSeconds(s => s <= 0 ? 0 : --s)\n        }, 1000)\n        break;\n      case TimerState.Paused:\n        clearInterval(intervalId.current);\n        break;\n      case TimerState.Reset:\n        clearInterval(intervalId.current);\n        // To Do - Refactor me because I am violating react-hooks/exhaustive-deps. After refactoring, remove the 'eslint-disable-next-line' below\n        reset();\n        break;\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timerState]);\n\n  function formatTime () {\n    const m = Math.floor(seconds % 3600 / 60);\n    const s = Math.floor(seconds % 3600 % 60);\n    return (m < 10 ? \"0\" : \"\") + m + \":\" + (s < 10 ? \"0\" : \"\") + s;\n  }\n\n  const formatTimeOnSecondsChange = useCallback(formatTime, [seconds]);\n  useEffect(() => {\n    document.title = formatTimeOnSecondsChange() + ' - Baroqodoro';\n  }, [formatTimeOnSecondsChange]);\n\n  return  (\n    <Row className=\"justify-content-center mt-5\">\n      <div className=\"timer text-monospace\">{ formatTime() }</div>\n    </Row>\n  );\n}\n\nexport default Timer;","export default __webpack_public_path__ + \"static/media/logo.8135ab22.svg\";","import logo from '../logo.svg';\nimport Navbar from 'react-bootstrap/Navbar';\n\nconst NavbarExp = () => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" role=\"navigation\">\n      <Navbar.Brand href=\"/\"><img alt=\"\" src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" />{' '}Baroqodoro</Navbar.Brand>\n    </Navbar>\n  );\n}\n\nexport default NavbarExp;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Timer, { TimerState, TimerType } from './components/Timer';\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row';\n\nconst App = () => {\n  const [timerState, setTimerState] = useState(TimerState.Paused);\n  const [timerType, setTimerType] = useState(TimerType.Focus);\n\n  useEffect(() => {\n    const keyboardShortcuts = (event: any) => {\n      if (event.code === 'Space') {\n        setTimerState(currTimerState => TimerState.Paused === currTimerState ? TimerState.Started : TimerState.Paused)\n      }\n    };\n    document.addEventListener('keyup', keyboardShortcuts);\n    return function cleanup() {\n      document.removeEventListener('keyup', keyboardShortcuts);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Container>\n        <Row className=\"justify-content-center mt-5\">\n            <ButtonGroup>\n              <Button variant=\"outline-secondary\" className={ timerType === TimerType.Focus ? 'active' : '' } onClick={ () => setTimerType(TimerType.Focus) }>Focus</Button>\n              <Button variant=\"outline-secondary\" className={ timerType === TimerType.ShortBreak ? 'active' : '' } onClick={ () => setTimerType(TimerType.ShortBreak) }>Short Break</Button>\n              <Button variant=\"outline-secondary\" className={ timerType === TimerType.LongBreak ? 'active' : '' } onClick={ () => setTimerType(TimerType.LongBreak) }>Long Break</Button>\n            </ButtonGroup>\n        </Row>\n        <Timer timerState={ timerState } timerType={ timerType } />\n        <Row className=\"justify-content-center mt-5\">\n          <Col className=\"text-center\" xs lg=\"2\"><Button className=\"btn-xl\" variant=\"primary\" onClick={ () => setTimerState(TimerState.Started) }>Start</Button></Col>\n          <Col className=\"text-center\" xs lg=\"2\"><Button className=\"btn-xl\" variant=\"warning\" onClick={ () => setTimerState(TimerState.Paused) }>Pause</Button></Col>\n          <Col className=\"text-center\" xs lg=\"2\"><Button className=\"btn-xl\" variant=\"danger\" onClick={ () => setTimerState(TimerState.Reset) }>Reset</Button></Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}