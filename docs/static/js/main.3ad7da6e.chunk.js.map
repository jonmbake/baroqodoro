{"version":3,"sources":["logo.svg","pages/History.tsx","components/AudioPlayer.tsx","components/Navbar.tsx","pages/Timer.tsx","pages/Settings.tsx","util/storageState.ts","pages/About.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["numberCompletedToday","history","filter","hi","today","Date","toLocaleDateString","completed","includes","length","calculateGoalCompletionPercentage","dailyGoal","completedToday","PlayMode","History","setHistory","settings","rows","map","h","i","timerMode","type","style","width","value","notes","onChange","e","prevHistory","ph","i2","target","Alert","variant","ProgressBar","now","Table","striped","bordered","hover","className","Button","onClick","window","confirm","CustomToggle","forwardRef","ref","children","href","preventDefault","NavbarExp","Navbar","bg","role","Brand","alt","src","logo","height","Nav","Link","Dropdown","Toggle","as","id","progress","size","lineWidth","progressColor","showPercentage","Menu","align","Item","TimerMode","sortedSongs","songs","sort","a","b","composer","AudioPlayer","playTrack","useState","Serial","playMode","setPlayMode","isMuted","setMuted","downloadUrl","selectedSong","setSelectedSong","audioRef","useRef","useEffect","current","play","pause","Focus","songsSelections","s","title","Row","Col","sm","lg","InputGroup","Prepend","Text","Form","Control","Append","Repeat","currPlayMode","Shuffle","m","muted","onEnded","currentTime","Math","floor","random","findIndex","Main","setTimerMode","useTimer","expiryTimestamp","onExpire","concat","HistoryItem","toLocaleString","minutes","seconds","resume","restart","isRunning","timerReady","setTimerReady","onTimerModeClick","tm","valueOf","ButtonGroup","ShortBreak","LongBreak","toString","padStart","xs","SettingsPage","setSettings","Group","controlId","Label","min","max","step","Settings","parseInt","getItem","sessionStorageKey","storage","valueStr","JSON","parse","useStateWithLocalStorage","initialState","state","React","setValue","stringify","setItem","About","rel","App","localStorage","Container","path","exact","Timer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ad7da6e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.8135ab22.svg\";","import React, { Fragment, Dispatch, SetStateAction } from \"react\";\nimport { Alert, Button, ProgressBar, Table } from \"react-bootstrap\";\nimport { HistoryItem, Settings } from \"../App\";\n\nfunction numberCompletedToday (history: Array<HistoryItem>) {\n  return history.filter(hi => {\n    const today = new Date().toLocaleDateString();\n    return hi.completed.includes(today);\n  }).length;\n}\n\nexport function calculateGoalCompletionPercentage (dailyGoal: number, history: Array<HistoryItem>) {\n  const completedToday = numberCompletedToday(history);\n\n  return completedToday > dailyGoal ? 100 : ((completedToday / dailyGoal) * 100);\n}\n\ninterface Props {\n  history: Array<HistoryItem>,\n  setHistory: Dispatch<SetStateAction<Array<HistoryItem>>>,\n  settings: Settings\n}\n\nconst History = ({ history, setHistory, settings }: Props) => {\n\n  function clearHistory () {\n    if(window.confirm('Are you sure that you want to clear the log?')) {\n      setHistory([]);\n    }\n  }\n\n  const rows = history.map((h, i) => {\n    return (\n      <tr key={i}>\n        <td>{ h.timerMode }</td>\n        <td>{ h.completed }</td>\n        <th><input type=\"text\" style={{ width: \"100%\" }} value={ h.notes } onChange={ (e) => setHistory(prevHistory => {\n          return prevHistory.map((ph, i2) => i2 === i ? {...ph, notes: e.target.value} : ph)\n        })}/></th>\n      </tr>\n    );\n  });\n\n  return (\n    <Fragment>\n      <h1>History</h1>\n      <Alert variant=\"info\">\n        History is saved to this browser's local storage. When clearing browser data, history will be lost.\n      </Alert>\n      <label>Daily Goal Progress</label>\n      <ProgressBar now={ calculateGoalCompletionPercentage(settings.dailyGoal, history) } />\n      <output>{ numberCompletedToday(history) } / { settings.dailyGoal }</output>\n      <Table striped bordered hover className=\"mt-3\">\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Time Completed</th>\n            <th>Notes</th>\n          </tr>\n        </thead>\n        <tbody>\n          { rows }\n        </tbody>\n      </Table>\n      <Button onClick={ clearHistory }>Clear History</Button>\n    </Fragment>\n  );\n}\n\nexport default History;","import React, { ChangeEvent, useEffect, useRef, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport { ArrowRepeat, MusicNoteBeamed, Shuffle, VolumeMute } from 'react-bootstrap-icons';\nimport Col from 'react-bootstrap/Col';\nimport songs from '../songs.json';\nimport { TimerMode } from '../pages/Timer';\n\nexport enum PlayMode {\n  Serial,\n  Repeat,\n  Shuffle\n}\n\ninterface AudioPlayerProps {\n  playTrack: boolean,\n  timerMode: TimerMode | undefined\n}\n\nconst sortedSongs = songs.sort((a, b) => a.composer > b.composer ? 1 : -1);\n\nconst AudioPlayer = ({timerMode, playTrack}: AudioPlayerProps) => {\n  const [playMode, setPlayMode] = useState(PlayMode.Serial);\n  const [isMuted, setMuted] = useState(false);\n  const [selectedSong, setSelectedSong] = useState(sortedSongs[0].downloadUrl)\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n\n  useEffect(() => {\n    if (playTrack) {\n      audioRef.current!.play();\n    } else {\n      audioRef.current!.pause();\n    }\n  }, [selectedSong, playTrack]);\n\n  // Mute and pause when taking a break\n  useEffect(() => {\n    if (timerMode === TimerMode.Focus) {\n      setMuted(false);\n    } else {\n      audioRef.current!.pause();\n      setMuted(true);\n    }\n  }, [timerMode]);\n\n  function onAudioEnded () {\n    if (playMode === PlayMode.Repeat) {\n      audioRef.current!.currentTime = 0;\n      audioRef.current!.play();\n    } else if (playMode === PlayMode.Shuffle) {\n      setSelectedSong(sortedSongs[Math.floor(Math.random() * sortedSongs.length)].downloadUrl);\n    } else {\n      let i =  sortedSongs.findIndex(s => s.downloadUrl === selectedSong);\n      if (i === sortedSongs.length - 1) {\n        i = 0;\n      } else {\n        ++i;\n      }\n      setSelectedSong(sortedSongs[i].downloadUrl);\n    }\n  }\n\n  const songsSelections = sortedSongs.map((s, i) => {\n    return (\n      <option key={ i } value={ s.downloadUrl }>{ s.composer } - { s.title }</option>\n    );\n  });\n\n  return (\n    <Row className=\"justify-content-center mt-5\">\n      <Col sm lg=\"8\" className=\"text-center\">\n      <InputGroup>\n        <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\"><MusicNoteBeamed /></InputGroup.Text>\n        </InputGroup.Prepend>\n        <Form.Control as=\"select\" onChange={ (e: ChangeEvent<any>) => { setSelectedSong(e.target.value)} } value={ selectedSong }>\n          { songsSelections }\n        </Form.Control>\n        <InputGroup.Append>\n          <Button title=\"Repeat the currently selected track\" className={ playMode === PlayMode.Repeat ? 'active' : '' }\n            onClick={ () => setPlayMode(currPlayMode => currPlayMode === PlayMode.Repeat ? PlayMode.Serial : PlayMode.Repeat) } variant=\"outline-secondary\"><ArrowRepeat/></Button>\n          <Button title=\"Pick the next track randomly\" className={ playMode === PlayMode.Shuffle ? 'active' : '' }\n            onClick={ () => setPlayMode(currPlayMode => currPlayMode === PlayMode.Shuffle ? PlayMode.Serial : PlayMode.Shuffle) } variant=\"outline-secondary\"><Shuffle/></Button>\n          <Button title=\"Mute\" className={ isMuted ? 'active' : '' }\n            onClick={ () => setMuted(m => !m) } variant=\"outline-secondary\"><VolumeMute/></Button>\n        </InputGroup.Append>\n      </InputGroup>\n      <small className=\"text-muted\">Music courtesy of <a href=\"http://www.baroquemusic.org/\">baroquemusic.org</a></small>\n      <audio style={ {\"display\": \"none\"} } ref={ audioRef } src={ selectedSong } muted={ isMuted } onEnded={ onAudioEnded } />\n      </Col>\n    </Row>\n  );\n};\n\nexport default AudioPlayer;","import { forwardRef } from 'react';\nimport Circle from 'react-circle';\nimport logo from '../logo.svg';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { DropdownToggleProps } from 'react-bootstrap/esm/DropdownToggle';\nimport { HistoryItem, Settings } from '../App';\nimport { calculateGoalCompletionPercentage } from '../pages/History';\n\nconst CustomToggle = forwardRef(({ children, onClick }: DropdownToggleProps, ref: any) => (\n  <a href=\"#\" ref={ref}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick && onClick(e);\n    }}\n  >\n    {children}\n  </a>\n));\n\ninterface Props {\n  settings: Settings,\n  history: Array<HistoryItem>\n}\n\nconst NavbarExp = ({history, settings}: Props) => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" role=\"navigation\" className=\"justify-content-between\">\n      <Navbar.Brand href=\"/\"><img alt=\"\" src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" />{' '}Baroqodoro</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n      <Nav.Link href=\"/#/about\">About</Nav.Link>\n    </Nav>\n      <Dropdown>\n        <Dropdown.Toggle as={CustomToggle} id=\"dropdown-basic\">\n          <Circle progress={ calculateGoalCompletionPercentage(settings.dailyGoal, history) } size=\"30\" lineWidth=\"50\" progressColor=\"#28a745\" showPercentage={ false } />\n        </Dropdown.Toggle>\n        <Dropdown.Menu align=\"right\">\n          <Dropdown.Item href=\"/#/history\">History</Dropdown.Item>\n          <Dropdown.Item href=\"/#/settings\">Settings</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Navbar>\n  );\n}\n\nexport default NavbarExp;","import React, { Fragment, Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\nimport AudioPlayer from '../components/AudioPlayer';\nimport { useTimer } from 'react-timer-hook';\nimport { HistoryItem } from '../App';\n\nexport enum TimerMode {\n  Focus = 1500000,\n  ShortBreak = 300000,\n  LongBreak = 600000\n}\n\nexport const historyStorageKey = 'baroqodoroLog';\n\ninterface Props {\n  setHistory: Dispatch<SetStateAction<Array<HistoryItem>>>\n}\n\nconst Main = ({ setHistory }: Props) => {\n  const [timerMode, setTimerMode] = useState(TimerMode.Focus);\n  const { minutes, seconds, pause, resume, restart, isRunning } = useTimer({ expiryTimestamp: Date.now() + TimerMode.Focus, onExpire: () => setHistory(h => h.concat(new HistoryItem(TimerMode[timerMode], new Date().toLocaleString(), ''))) })\n  // A hack because react-timer-hook doesn't allow pause on init\n  const [timerReady, setTimerReady] = useState(false);\n\n  useEffect(() => {\n    pause();\n    setTimerReady(true);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function onTimerModeClick (tm: TimerMode) {\n    setTimerMode(tm);\n    restart(Date.now() + tm.valueOf());\n  }\n\n  return (\n    <Fragment>\n      <Row className=\"justify-content-center\">\n        <ButtonGroup>\n          <Button variant=\"outline-secondary\" className={ timerMode === TimerMode.Focus ? 'active' : '' } onClick={ () => onTimerModeClick(TimerMode.Focus) }>Focus</Button>\n          <Button variant=\"outline-secondary\" className={ timerMode === TimerMode.ShortBreak ? 'active' : '' } onClick={ () => onTimerModeClick(TimerMode.ShortBreak) }>Short Break</Button>\n          <Button variant=\"outline-secondary\" className={ timerMode === TimerMode.LongBreak ? 'active' : '' } onClick={ () => onTimerModeClick(TimerMode.LongBreak) }>Long Break</Button>\n        </ButtonGroup>\n      </Row>\n      <Row className=\"justify-content-center mt-5\">\n        <div className=\"timer text-monospace\">{ minutes.toString().padStart(2, '0') }:{ seconds.toString().padStart(2, '0') }</div>\n      </Row>\n      <AudioPlayer timerMode={ timerMode } playTrack={ timerReady && isRunning } />\n      <Row className=\"justify-content-center mt-5\">\n        <Col className=\"text-center\" xs lg=\"2\"><Button className=\"btn-xl\" variant=\"primary\" onClick={ () => minutes === 0 && seconds === 0 ? restart(Date.now() + timerMode.valueOf()) : resume() }>Start</Button></Col>\n        <Col className=\"text-center\" xs lg=\"2\"><Button className=\"btn-xl\" variant=\"warning\" onClick={ pause }>Pause</Button></Col>\n        <Col className=\"text-center\" xs lg=\"2\"><Button className=\"btn-xl\" variant=\"danger\" onClick={ () => restart(Date.now() + timerMode.valueOf()) }>Restart</Button></Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Main;","import React, { Fragment, Dispatch, SetStateAction } from \"react\";\nimport { Alert, Form } from \"react-bootstrap\";\nimport { Settings } from \"../App\";\n\nexport const goalStorageKey = 'baroqodoroGoal';\n\ninterface Props {\n  settings: Settings,\n  setSettings: Dispatch<SetStateAction<Settings>>\n}\n\nconst SettingsPage = ({ settings, setSettings }: Props) => {\n  return (\n    <Fragment>\n      <h1>Settings</h1>\n      <Alert variant=\"info\">\n        Settings are saved to this browser's local storage. When clearing browser data, settings will be lost.\n      </Alert>\n      <Form className=\"mt-3\">\n        <Form.Group controlId=\"dailySessionGoal\">\n          <Form.Label>Daily Focus Session Goal</Form.Label>\n          <Form.Control type=\"range\" min=\"1\" max=\"20\" step=\"1\" value={ settings.dailyGoal } onChange={ (e) => setSettings(new Settings((parseInt(e.target.value)))) }/>\n          <output>{ settings.dailyGoal }</output>\n          <Form.Text className=\"text-muted\">\n            Goal for how many Focus Sessions you wish to complete each day.\n          </Form.Text>\n        </Form.Group>\n      </Form>\n    </Fragment>\n  );\n}\n\nexport default SettingsPage;","import React, { Dispatch, SetStateAction } from 'react';\n\nexport function getItem (sessionStorageKey: string,  storage: Storage) {\n  const valueStr = storage.getItem(sessionStorageKey);\n  if (valueStr == null) {\n    return;\n  }\n  try {\n    return JSON.parse(valueStr);\n  } catch (e) {\n    return valueStr;\n  }\n}\n\nfunction useStateWithLocalStorage<S>(sessionStorageKey: string, initialState: S, storage: Storage) : [S, Dispatch<SetStateAction<S>>] {\n  let state: S = initialState;\n  if (getItem(sessionStorageKey, storage) != null) {\n    state = getItem(sessionStorageKey, storage);\n  }\n  const [value, setValue] = React.useState(state);\n\n  React.useEffect(() => {\n    let valueStr;\n    if (typeof value !== 'string') {\n      valueStr = JSON.stringify(value);\n    } else {\n      valueStr = value;\n    }\n    storage.setItem(sessionStorageKey, valueStr);\n  }, [storage, sessionStorageKey, value]);\n\n  React.useEffect(() => {\n    const i = getItem(sessionStorageKey, storage);\n    if (i != null) {\n      setValue(i);\n    }\n  }, [storage, sessionStorageKey]);\n  return [value, setValue];\n}\n\nexport default useStateWithLocalStorage;","import React, { Fragment } from \"react\"\n\nconst About = () => {\n  return (\n    <Fragment>\n      <h1>About</h1>\n      <p>A number of studies (like <a target=\"_blank\" rel=\"noreferrer\" href=\"http://ilkogretim-online.org.tr/index.php/io/article/view/4076\">this one</a>) have shown that listening to <a target=\"_blank\" rel=\"noreferrer\" href=\"https://en.wikipedia.org/wiki/Baroque_music#:~:text=Baroque%20music%20(UK%3A%20%2Fb,between%20Baroque%20and%20Classical%20eras.\">Baroque music</a> while doing focus work helps with comprehension and overall effectiveness. <a href=\"/\">Baroqodoro.com</a> is a tool to help one focus better by combining Baroque music with short focus sessions (similar to the <a target=\"_blank\" rel=\"noreferrer\" href=\"https://en.wikipedia.org/wiki/Pomodoro_Technique\">Pomodoro Technique</a>).</p>\n      <p>This project is <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/jonmbake/baroqodoro\">open sourced</a>. Feel free to contribute!</p>\n    </Fragment>\n  );\n}\n\nexport default About;","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Container from 'react-bootstrap/Container'\nimport Timer from './pages/Timer';\nimport History from './pages/History';\nimport SettingsPage from './pages/Settings';\nimport useStateWithLocalStorage from './util/storageState';\nimport About from './pages/About';\n\nexport class Settings {\n  constructor (\n    public dailyGoal: number = 8\n  ) {}\n}\n\nexport class HistoryItem {\n  constructor (\n    public timerMode: string,\n    public completed: string,\n    public notes: string,\n  ) {}\n}\n\nconst App = () => {\n  const [history, setHistory] = useStateWithLocalStorage<Array<HistoryItem>>('baroqodoroLog', [], window.localStorage);\n  const [settings, setSettings] = useStateWithLocalStorage<Settings>('baroqodoroSettings', new Settings(), window.localStorage)\n\n  return (\n    <HashRouter>\n    <div className=\"App\">\n      <Navbar settings={ settings } history={ history }/>\n      <Container className=\"mt-5\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <Timer setHistory={ setHistory } />\n          </Route>\n          <Route path=\"/about\" >\n            <About />\n          </Route>\n          <Route path=\"/history\" >\n            <History settings={ settings } history={ history } setHistory={ setHistory } />\n          </Route>\n          <Route path=\"/settings\">\n            <SettingsPage settings={ settings } setSettings={ setSettings }/>\n          </Route>\n        </Switch>\n      </Container>\n    </div>\n    <footer className=\"footer\">\n      <div className=\"container\">\n        <a href=\"mailto:jonmbake@gmail.com\">Contact</a> · <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/jonmbake/baroqodoro\">Github</a>\n      </div>\n    </footer>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}