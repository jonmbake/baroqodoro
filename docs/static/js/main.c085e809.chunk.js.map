{"version":3,"sources":["logo.svg","pages/History.tsx","components/AudioPlayer.tsx","components/Navbar.tsx","pages/Timer.tsx","pages/Settings.tsx","util/storageState.ts","pages/About.tsx","components/TaskBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["numberCompletedToday","history","filter","hi","today","Date","toLocaleDateString","timerMode","completed","includes","length","calculateGoalCompletionPercentage","dailyGoal","completedToday","PlayMode","History","setHistory","settings","rows","map","h","i","type","style","width","value","notes","onChange","e","prevHistory","ph","i2","target","Alert","variant","ProgressBar","now","Table","striped","bordered","hover","className","Button","onClick","window","confirm","CustomToggle","forwardRef","ref","children","href","preventDefault","NavbarExp","Navbar","bg","role","Brand","alt","src","logo","height","Nav","Link","Dropdown","Toggle","as","id","progress","size","lineWidth","progressColor","showPercentage","Menu","align","Item","TimerMode","sortedSongs","songs","sort","a","b","composer","AudioPlayer","playTrack","useState","Serial","playMode","setPlayMode","isMuted","setMuted","downloadUrl","selectedSong","setSelectedSong","audioRef","useRef","useEffect","current","play","pause","Focus","songsSelections","s","title","Row","Col","sm","lg","InputGroup","Prepend","Text","Form","Control","Append","Repeat","currPlayMode","Shuffle","m","muted","onEnded","currentTime","Math","floor","random","findIndex","Main","setIsRunning","setTimerMode","useTimer","expiryTimestamp","onExpire","concat","HistoryItem","toLocaleString","minutes","seconds","resume","restart","isRunning","timerReady","setTimerReady","onTimerModeClick","tm","valueOf","ButtonGroup","ShortBreak","LongBreak","toString","padStart","xs","SettingsPage","setSettings","Group","controlId","Label","min","max","step","Settings","parseInt","getItem","sessionStorageKey","storage","valueStr","JSON","parse","useStateWithLocalStorage","initialState","state","React","setValue","stringify","setItem","About","rel","Task","description","active","editing","TaskBar","addTaskInputRef","localStorage","tasks","setTasks","showTaskList","setShowTaskList","classes","message","focusTask","find","t","focus","addTask","v","trim","t1","t2","saveTask","taskList","ListGroup","FormControl","autoFocus","index","onKeyPress","event","key","markActive","itemIndex","stopPropagation","ts","toggleCompleted","aria-hidden","editTask","Modal","show","onHide","animation","Header","closeButton","Title","Body","placeholder","aria-label","Footer","App","Container","path","exact","Timer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c085e809.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.8135ab22.svg\";","import React, { Fragment, Dispatch, SetStateAction } from \"react\";\nimport { Alert, Button, ProgressBar, Table } from \"react-bootstrap\";\nimport { HistoryItem, Settings } from \"../App\";\n\nfunction numberCompletedToday (history: Array<HistoryItem>) {\n  return history.filter(hi => {\n    const today = new Date().toLocaleDateString();\n    return hi.timerMode === 'Focus' && hi.completed.includes(today);\n  }).length;\n}\n\nexport function calculateGoalCompletionPercentage (dailyGoal: number, history: Array<HistoryItem>) {\n  const completedToday = numberCompletedToday(history);\n\n  return completedToday > dailyGoal ? 100 : ((completedToday / dailyGoal) * 100);\n}\n\ninterface Props {\n  history: Array<HistoryItem>,\n  setHistory: Dispatch<SetStateAction<Array<HistoryItem>>>,\n  settings: Settings\n}\n\nconst History = ({ history, setHistory, settings }: Props) => {\n\n  function clearHistory () {\n    if(window.confirm('Are you sure that you want to clear the log?')) {\n      setHistory([]);\n    }\n  }\n\n  const rows = history.map((h, i) => {\n    return (\n      <tr key={i}>\n        <td>{ h.timerMode }</td>\n        <td>{ h.completed }</td>\n        <th><input type=\"text\" style={{ width: \"100%\" }} value={ h.notes } onChange={ (e) => setHistory(prevHistory => {\n          return prevHistory.map((ph, i2) => i2 === i ? {...ph, notes: e.target.value} : ph)\n        })}/></th>\n      </tr>\n    );\n  });\n\n  return (\n    <Fragment>\n      <h1>History</h1>\n      <Alert variant=\"info\">\n        History is saved to this browser's local storage. When clearing browser data, history will be lost.\n      </Alert>\n      <label>Daily Goal Progress</label>\n      <ProgressBar now={ calculateGoalCompletionPercentage(settings.dailyGoal, history) } />\n      <output>{ numberCompletedToday(history) } / { settings.dailyGoal }</output>\n      <Table striped bordered hover className=\"mt-3\">\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Time Completed</th>\n            <th>Notes</th>\n          </tr>\n        </thead>\n        <tbody>\n          { rows }\n        </tbody>\n      </Table>\n      <Button onClick={ clearHistory }>Clear History</Button>\n    </Fragment>\n  );\n}\n\nexport default History;","import React, { ChangeEvent, useEffect, useRef, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport { ArrowRepeat, MusicNoteBeamed, Shuffle, VolumeMute } from 'react-bootstrap-icons';\nimport Col from 'react-bootstrap/Col';\nimport songs from '../songs.json';\nimport { TimerMode } from '../pages/Timer';\n\nexport enum PlayMode {\n  Serial,\n  Repeat,\n  Shuffle\n}\n\ninterface AudioPlayerProps {\n  playTrack: boolean,\n  timerMode: TimerMode | undefined\n}\n\nconst sortedSongs = songs.sort((a, b) => a.composer > b.composer ? 1 : -1);\n\nconst AudioPlayer = ({timerMode, playTrack}: AudioPlayerProps) => {\n  const [playMode, setPlayMode] = useState(PlayMode.Serial);\n  const [isMuted, setMuted] = useState(false);\n  const [selectedSong, setSelectedSong] = useState(sortedSongs[0].downloadUrl)\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n\n  useEffect(() => {\n    if (playTrack) {\n      audioRef.current!.play();\n    } else {\n      audioRef.current!.pause();\n    }\n  }, [selectedSong, playTrack]);\n\n  // Mute and pause when taking a break\n  useEffect(() => {\n    if (timerMode === TimerMode.Focus) {\n      setMuted(false);\n    } else {\n      audioRef.current!.pause();\n      setMuted(true);\n    }\n  }, [timerMode]);\n\n  function onAudioEnded () {\n    if (playMode === PlayMode.Repeat) {\n      audioRef.current!.currentTime = 0;\n      audioRef.current!.play();\n    } else if (playMode === PlayMode.Shuffle) {\n      setSelectedSong(sortedSongs[Math.floor(Math.random() * sortedSongs.length)].downloadUrl);\n    } else {\n      let i =  sortedSongs.findIndex(s => s.downloadUrl === selectedSong);\n      if (i === sortedSongs.length - 1) {\n        i = 0;\n      } else {\n        ++i;\n      }\n      setSelectedSong(sortedSongs[i].downloadUrl);\n    }\n  }\n\n  const songsSelections = sortedSongs.map((s, i) => {\n    return (\n      <option key={ i } value={ s.downloadUrl }>{ s.composer } - { s.title }</option>\n    );\n  });\n\n  return (\n    <Row className=\"justify-content-center mt-5\">\n      <Col sm lg=\"8\" className=\"text-center\">\n      <InputGroup>\n        <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\"><MusicNoteBeamed /></InputGroup.Text>\n        </InputGroup.Prepend>\n        <Form.Control as=\"select\" onChange={ (e: ChangeEvent<any>) => { setSelectedSong(e.target.value)} } value={ selectedSong }>\n          { songsSelections }\n        </Form.Control>\n        <InputGroup.Append>\n          <Button title=\"Repeat the currently selected track\" className={ playMode === PlayMode.Repeat ? 'active' : '' }\n            onClick={ () => setPlayMode(currPlayMode => currPlayMode === PlayMode.Repeat ? PlayMode.Serial : PlayMode.Repeat) } variant=\"outline-secondary\"><ArrowRepeat/></Button>\n          <Button title=\"Pick the next track randomly\" className={ playMode === PlayMode.Shuffle ? 'active' : '' }\n            onClick={ () => setPlayMode(currPlayMode => currPlayMode === PlayMode.Shuffle ? PlayMode.Serial : PlayMode.Shuffle) } variant=\"outline-secondary\"><Shuffle/></Button>\n          <Button title=\"Mute\" className={ isMuted ? 'active' : '' }\n            onClick={ () => setMuted(m => !m) } variant=\"outline-secondary\"><VolumeMute/></Button>\n        </InputGroup.Append>\n      </InputGroup>\n      <small className=\"text-muted\">Music courtesy of <a href=\"http://www.baroquemusic.org/\">baroquemusic.org</a></small>\n      <audio style={ {\"display\": \"none\"} } ref={ audioRef } src={ selectedSong } muted={ isMuted } onEnded={ onAudioEnded } />\n      </Col>\n    </Row>\n  );\n};\n\nexport default AudioPlayer;","import { forwardRef } from 'react';\nimport Circle from 'react-circle';\nimport logo from '../logo.svg';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { DropdownToggleProps } from 'react-bootstrap/esm/DropdownToggle';\nimport { HistoryItem, Settings } from '../App';\nimport { calculateGoalCompletionPercentage } from '../pages/History';\n\nconst CustomToggle = forwardRef(({ children, onClick }: DropdownToggleProps, ref: any) => (\n  <a href=\"#\" ref={ref}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick && onClick(e);\n    }}\n  >\n    {children}\n  </a>\n));\n\ninterface Props {\n  settings: Settings,\n  history: Array<HistoryItem>\n}\n\nconst NavbarExp = ({history, settings}: Props) => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" role=\"navigation\" className=\"justify-content-between\">\n      <Navbar.Brand href=\"/\"><img alt=\"\" src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" />{' '}Baroqodoro</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n      <Nav.Link href=\"/#/about\">About</Nav.Link>\n    </Nav>\n      <Dropdown>\n        <Dropdown.Toggle as={CustomToggle} id=\"dropdown-basic\">\n          <Circle progress={ calculateGoalCompletionPercentage(settings.dailyGoal, history) } size=\"30\" lineWidth=\"50\" progressColor=\"#28a745\" showPercentage={ false } />\n        </Dropdown.Toggle>\n        <Dropdown.Menu align=\"right\">\n          <Dropdown.Item href=\"/#/history\">History</Dropdown.Item>\n          <Dropdown.Item href=\"/#/settings\">Settings</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Navbar>\n  );\n}\n\nexport default NavbarExp;","import React, { Fragment, Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\nimport AudioPlayer from '../components/AudioPlayer';\nimport { useTimer } from 'react-timer-hook';\nimport { HistoryItem } from '../App';\n\nexport enum TimerMode {\n  Focus = 1500000,\n  ShortBreak = 300000,\n  LongBreak = 600000\n}\n\nexport const historyStorageKey = 'baroqodoroLog';\n\ninterface Props {\n  setHistory: Dispatch<SetStateAction<Array<HistoryItem>>>,\n  setIsRunning: Dispatch<SetStateAction<boolean>>\n}\n\nconst Main = ({ setHistory, setIsRunning }: Props) => {\n  const [timerMode, setTimerMode] = useState(TimerMode.Focus);\n  const { minutes, seconds, pause, resume, restart, isRunning } = useTimer({ expiryTimestamp: Date.now() + TimerMode.Focus, onExpire: () => setHistory(h => h.concat(new HistoryItem(TimerMode[timerMode], new Date().toLocaleString(), ''))) })\n  // A hack because react-timer-hook doesn't allow pause on init\n  const [timerReady, setTimerReady] = useState(false);\n\n  useEffect(() => {\n    pause();\n    setTimerReady(true);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setIsRunning(isRunning);\n  }, [setIsRunning, isRunning]);\n\n  function onTimerModeClick (tm: TimerMode) {\n    setTimerMode(tm);\n    restart(Date.now() + tm.valueOf());\n  }\n\n  return (\n    <Fragment>\n      <Row className=\"justify-content-center\">\n        <ButtonGroup>\n          <Button variant=\"outline-secondary\" className={ timerMode === TimerMode.Focus ? 'active' : '' } onClick={ () => onTimerModeClick(TimerMode.Focus) }>Focus</Button>\n          <Button variant=\"outline-secondary\" className={ timerMode === TimerMode.ShortBreak ? 'active' : '' } onClick={ () => onTimerModeClick(TimerMode.ShortBreak) }>Short Break</Button>\n          <Button variant=\"outline-secondary\" className={ timerMode === TimerMode.LongBreak ? 'active' : '' } onClick={ () => onTimerModeClick(TimerMode.LongBreak) }>Long Break</Button>\n        </ButtonGroup>\n      </Row>\n      <Row className=\"justify-content-center mt-5\">\n        <div className=\"timer text-monospace\">{ minutes.toString().padStart(2, '0') }:{ seconds.toString().padStart(2, '0') }</div>\n      </Row>\n      <AudioPlayer timerMode={ timerMode } playTrack={ timerReady && isRunning } />\n      <Row className=\"justify-content-center mt-5\">\n        <Col className=\"text-center\" xs lg=\"2\"><Button className=\"btn-xl\" variant=\"primary\" onClick={ () => minutes === 0 && seconds === 0 ? restart(Date.now() + timerMode.valueOf()) : resume() }>Start</Button></Col>\n        <Col className=\"text-center\" xs lg=\"2\"><Button className=\"btn-xl\" variant=\"warning\" onClick={ pause }>Pause</Button></Col>\n        <Col className=\"text-center\" xs lg=\"2\"><Button className=\"btn-xl\" variant=\"danger\" onClick={ () => restart(Date.now() + timerMode.valueOf()) }>Restart</Button></Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Main;","import React, { Fragment, Dispatch, SetStateAction } from \"react\";\nimport { Alert, Form } from \"react-bootstrap\";\nimport { Settings } from \"../App\";\n\nexport const goalStorageKey = 'baroqodoroGoal';\n\ninterface Props {\n  settings: Settings,\n  setSettings: Dispatch<SetStateAction<Settings>>\n}\n\nconst SettingsPage = ({ settings, setSettings }: Props) => {\n  return (\n    <Fragment>\n      <h1>Settings</h1>\n      <Alert variant=\"info\">\n        Settings are saved to this browser's local storage. When clearing browser data, settings will be lost.\n      </Alert>\n      <Form className=\"mt-3\">\n        <Form.Group controlId=\"dailySessionGoal\">\n          <Form.Label>Daily Focus Session Goal</Form.Label>\n          <Form.Control type=\"range\" min=\"1\" max=\"20\" step=\"1\" value={ settings.dailyGoal } onChange={ (e) => setSettings(new Settings((parseInt(e.target.value)))) }/>\n          <output>{ settings.dailyGoal }</output>\n          <Form.Text className=\"text-muted\">\n            Goal for how many Focus Sessions you wish to complete each day.\n          </Form.Text>\n        </Form.Group>\n      </Form>\n    </Fragment>\n  );\n}\n\nexport default SettingsPage;","import React, { Dispatch, SetStateAction } from 'react';\n\nexport function getItem (sessionStorageKey: string,  storage: Storage) {\n  const valueStr = storage.getItem(sessionStorageKey);\n  if (valueStr == null) {\n    return;\n  }\n  try {\n    return JSON.parse(valueStr);\n  } catch (e) {\n    return valueStr;\n  }\n}\n\nfunction useStateWithLocalStorage<S>(sessionStorageKey: string, initialState: S, storage: Storage) : [S, Dispatch<SetStateAction<S>>] {\n  let state: S = initialState;\n  if (getItem(sessionStorageKey, storage) != null) {\n    state = getItem(sessionStorageKey, storage);\n  }\n  const [value, setValue] = React.useState(state);\n\n  React.useEffect(() => {\n    let valueStr;\n    if (typeof value !== 'string') {\n      valueStr = JSON.stringify(value);\n    } else {\n      valueStr = value;\n    }\n    storage.setItem(sessionStorageKey, valueStr);\n  }, [storage, sessionStorageKey, value]);\n\n  React.useEffect(() => {\n    const i = getItem(sessionStorageKey, storage);\n    if (i != null) {\n      setValue(i);\n    }\n  }, [storage, sessionStorageKey]);\n  return [value, setValue];\n}\n\nexport default useStateWithLocalStorage;","import React, { Fragment } from \"react\"\n\nconst About = () => {\n  return (\n    <Fragment>\n      <h1>About</h1>\n      <p>A number of studies (like <a target=\"_blank\" rel=\"noreferrer\" href=\"http://ilkogretim-online.org.tr/index.php/io/article/view/4076\">this one</a>) have shown that listening to <a target=\"_blank\" rel=\"noreferrer\" href=\"https://en.wikipedia.org/wiki/Baroque_music#:~:text=Baroque%20music%20(UK%3A%20%2Fb,between%20Baroque%20and%20Classical%20eras.\">Baroque music</a> while doing focus work helps with comprehension and overall effectiveness. <a href=\"/\">Baroqodoro.com</a> is a tool to help one focus better by combining Baroque music with short focus sessions (similar to the <a target=\"_blank\" rel=\"noreferrer\" href=\"https://en.wikipedia.org/wiki/Pomodoro_Technique\">Pomodoro Technique</a>).</p>\n      <p>This project is <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/jonmbake/baroqodoro\">open sourced</a>. Feel free to contribute!</p>\n    </Fragment>\n  );\n}\n\nexport default About;","import React, { ChangeEvent, Fragment, useEffect, useRef, useState } from \"react\";\nimport { Button, FormControl, InputGroup, ListGroup, Modal } from \"react-bootstrap\";\nimport { Check, Pencil } from 'react-bootstrap-icons';\nimport useStateWithLocalStorage from \"../util/storageState\";\n\ninterface Props {\n  isRunning: boolean\n}\n\nclass Task {\n  constructor(\n    public description: string,\n    public active: boolean = false,\n    public completed: boolean = false,\n    public editing: boolean = false\n  ) {}\n}\n\nconst TaskBar = ({ isRunning }: Props) => {\n  const addTaskInputRef = useRef<HTMLInputElement>(null);\n  const [tasks, setTasks] = useStateWithLocalStorage<Array<Task>>('baroqodoroTasks', [], window.localStorage);\n  const [showTaskList, setShowTaskList] = useState(false);\n\n  let classes = \"p-1 text-center lead alert\";\n  let message = \"\";\n  if (isRunning) {\n    classes = classes.concat(\" alert-success\");\n    const focusTask = tasks.find(t => t.active)?.description || 'a task';\n    message = `Focused on '${ focusTask }'`;\n  } else {\n    classes = classes.concat(\" alert-danger\");\n    message = 'Timer paused -- not focused';\n  }\n\n  useEffect(() => {\n    tasks.findIndex(t => t.editing) === -1 && addTaskInputRef.current && addTaskInputRef.current.focus();\n  });\n\n  const addTask = () => {\n    const v = addTaskInputRef.current?.value;\n    if (v == null || v?.trim() === '') {\n      return;\n    }\n    setTasks(tasks => tasks.concat(new Task(v, tasks.length === 0)).sort((t1, t2) => t1.description > t2.description ? 1 : -1));\n  }\n\n  const saveTask = () => {\n    setTasks(tasks => tasks.map(t => {\n      t.editing = false;\n      return t;\n    }));\n\n  }\n\n  const editTask = (e: React.MouseEvent<HTMLElement>, itemIndex: number) => {\n    e.stopPropagation();\n    setTasks(tasks => tasks.map((t, i) => {\n      t.editing = i === itemIndex;\n      return t;\n    }));\n  };\n\n  const toggleCompleted = (e: React.MouseEvent<HTMLElement>, itemIndex: number) => {\n    e.stopPropagation();\n    setTasks(tasks => {\n      const ts = [...tasks];\n      const t = {...ts[itemIndex]};\n      t.completed = !t.completed;\n      ts[itemIndex] = t;\n      return ts;\n    });\n  }\n\n  const markActive = (index: number) => {\n    setTasks(tasks => tasks.map((t, i) => {\n      if (i === index) {\n        t.active = true;\n      } else {\n        t.active = false;\n      }\n      return t;\n    }));\n  }\n\n  const clearCompleted = () => {\n    setTasks(tasks => tasks.filter(t => !t.completed))\n\n  }\n\n  const updateTaskDescription = (index: number) => (e: ChangeEvent<any>) => {\n    setTasks(tasks => {\n      return tasks.map((t, i) => {\n        if (i === index) {\n          t.description = e.target.value;\n        }\n        return t;\n      })\n    })\n  }\n\n  const taskList = tasks.map((t, i) => {\n    if (t.editing) {\n      return (\n        <ListGroup.Item active={ t.active } key={ i } >\n        <InputGroup className=\"mb-3\">\n          <FormControl value={ t.description } autoFocus={ true } onChange={ updateTaskDescription(i) } onKeyPress={(event: React.KeyboardEvent) => event.key === 'Enter' ? saveTask() : '' } />\n          <InputGroup.Append>\n            <Button variant=\"light\" onClick={ saveTask }>Save</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </ListGroup.Item>\n      );\n    }\n    return (\n      <ListGroup.Item className={ t.completed ? 'completed-task' : '' } active={ t.active } onClick={ () => markActive(i) } key={ i }>\n        { t.description }\n        <button type=\"button\" className=\"close\" title=\"Toggle Complete\" onClick={ (e) => toggleCompleted(e, i) }><span aria-hidden=\"true\"><Check/></span><span className=\"sr-only\">Toggle Complete</span></button>&nbsp;\n        <button type=\"button\" className=\"close\" title=\"Edit\" onClick={ (e) => editTask(e, i) }><span aria-hidden=\"true\"><Pencil/></span><span className=\"sr-only\">Edit Task</span></button>&nbsp;\n      </ListGroup.Item>\n    );\n  });\n\n  return (\n    <Fragment>\n      <div className={ classes }>\n        { message } <a href=\"#\" className=\"alert-link\" onClick={ () => setShowTaskList(true)}>Edit tasks</a>\n      </div>\n      <Modal size=\"lg\" show={ showTaskList } onHide={ () => setShowTaskList(false) } animation={ false } >\n        <Modal.Header closeButton>\n          <Modal.Title>Tasks</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>What tasks would you lke to complete today?</p>\n        <ListGroup className=\"task-list\">\n          { taskList }\n          <ListGroup.Item key={ taskList.length }>\n            <InputGroup>\n              <FormControl placeholder=\"Task description\" aria-label=\"Task description\" ref={ addTaskInputRef } onKeyPress={(event: React.KeyboardEvent) => event.key === 'Enter' ? addTask() : '' } />\n              <InputGroup.Append>\n                <Button variant=\"outline-secondary\" onClick={ addTask }>Add</Button>\n              </InputGroup.Append>\n            </InputGroup> \n          </ListGroup.Item>\n        </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={ clearCompleted }>Clear Completed</Button>\n        </Modal.Footer>\n      </Modal>\n    </Fragment>\n\n  )\n}\n\nexport default TaskBar;","import React, { useState } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Container from 'react-bootstrap/Container'\nimport Timer from './pages/Timer';\nimport History from './pages/History';\nimport SettingsPage from './pages/Settings';\nimport useStateWithLocalStorage from './util/storageState';\nimport About from './pages/About';\nimport TaskBar from './components/TaskBar';\n\nexport class Settings {\n  constructor (\n    public dailyGoal: number = 8\n  ) {}\n}\n\nexport class HistoryItem {\n  constructor (\n    public timerMode: string,\n    public completed: string,\n    public notes: string,\n  ) {}\n}\n\nconst App = () => {\n  const [history, setHistory] = useStateWithLocalStorage<Array<HistoryItem>>('baroqodoroLog', [], window.localStorage);\n  const [settings, setSettings] = useStateWithLocalStorage<Settings>('baroqodoroSettings', new Settings(), window.localStorage)\n  const [isRunning, setIsRunning] = useState(false);\n\n  return (\n    <HashRouter>\n    <div className=\"App\">\n      <Navbar settings={ settings } history={ history }/>\n      <TaskBar isRunning={ isRunning } />\n      <Container className=\"mt-5\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <Timer setHistory={ setHistory } setIsRunning={ setIsRunning }/>\n          </Route>\n          <Route path=\"/about\" >\n            <About />\n          </Route>\n          <Route path=\"/history\" >\n            <History settings={ settings } history={ history } setHistory={ setHistory } />\n          </Route>\n          <Route path=\"/settings\">\n            <SettingsPage settings={ settings } setSettings={ setSettings }/>\n          </Route>\n        </Switch>\n      </Container>\n    </div>\n    <footer className=\"footer\">\n      <div className=\"container\">\n        <a href=\"mailto:jonmbake@gmail.com\">Contact</a> · <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/jonmbake/baroqodoro\">Github</a>\n      </div>\n    </footer>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}